/*
 *  This program developed in Java is based on the netbeans platform and is used
 *  to design and to analyse composite structures by means of analytical and 
 *  numerical methods.
 * 
 *  Further information can be found here:
 *  http://www.elamx.de
 *    
 *  Copyright (C) 2021 Technische Universität Dresden - Andreas Hauffe
 * 
 *  This file is part of eLamX².
 *
 *  eLamX² is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  eLamX² is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with eLamX².  If not, see <http://www.gnu.org/licenses/>.
 */
package de.view3d.properties;

import de.view3d.View3DProperties;
import java.awt.Color;
import javax.swing.JColorChooser;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

final class View3DPropPanelPanel extends javax.swing.JPanel implements ChangeListener {

    private final View3DPropPanelOptionsPanelController controller;

    private static final double maxQuality = 2.0;
    private static final double minQuality = 0.5;

    View3DPropPanelPanel(View3DPropPanelOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        qualitySlider.addChangeListener(this);
        color1Label.setOpaque(true);
        color1Label.setBackground(View3DProperties.getDefault().getColor1());
        color2Label.setOpaque(true);
        color2Label.setBackground(View3DProperties.getDefault().getColor2());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        qualitySlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        color1Label = new javax.swing.JLabel();
        color2Label = new javax.swing.JLabel();
        select1Button = new javax.swing.JButton();
        select2Button = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "3DPropertiesPanel.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qualitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(qualitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "BackgroundPropteriesPanell.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.jLabel4.text")); // NOI18N
        jLabel4.setToolTipText(org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.jLabel4.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(color1Label, org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.color1Label.text")); // NOI18N
        color1Label.setToolTipText(org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.color1Label.toolTipText")); // NOI18N
        color1Label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.openide.awt.Mnemonics.setLocalizedText(color2Label, org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.color2Label.text")); // NOI18N
        color2Label.setToolTipText(org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.color2Label.toolTipText")); // NOI18N
        color2Label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.openide.awt.Mnemonics.setLocalizedText(select1Button, org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.select1Button.text")); // NOI18N
        select1Button.setMargin(new java.awt.Insets(2, 2, 2, 2));
        select1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select1ButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(select2Button, org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.select2Button.text")); // NOI18N
        select2Button.setMargin(new java.awt.Insets(2, 2, 2, 2));
        select2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select2ButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(resetButton, org.openide.util.NbBundle.getMessage(View3DPropPanelPanel.class, "View3DPropPanelPanel.resetButton.text")); // NOI18N
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(color2Label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(select2Button))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(color1Label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(select1Button))))
                    .addComponent(resetButton))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(color1Label)
                    .addComponent(select1Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(color2Label)
                    .addComponent(select2Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void select1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select1ButtonActionPerformed
        Color c = JColorChooser.showDialog(this, "Hintergrundfarbe aussuchen", color1Label.getBackground());
        if (c != null) {
            color1Label.setOpaque(true);
            color1Label.setBackground(c);
            controller.changed();
        }
    }//GEN-LAST:event_select1ButtonActionPerformed

    private void select2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select2ButtonActionPerformed
        Color c = JColorChooser.showDialog(this, "Hintergrundfarbe aussuchen", color2Label.getBackground());
        if (c != null) {
            color2Label.setOpaque(true);
            color2Label.setBackground(c);
            controller.changed();
        }
    }//GEN-LAST:event_select2ButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        color1Label.setOpaque(true);
        color1Label.setBackground(new Color(255, 255, 255));
        color2Label.setOpaque(true);
        color2Label.setBackground(new Color(204, 231, 255));
    }//GEN-LAST:event_resetButtonActionPerformed

    void load() {
        double actQuality = View3DProperties.getDefault().getNetQuality();
        qualitySlider.setValue((int) Math.round(100.0 / (maxQuality - minQuality) * (actQuality - minQuality)));
        color1Label.setOpaque(true);
        color1Label.setBackground(View3DProperties.getDefault().getColor1());
        color2Label.setOpaque(true);
        color2Label.setBackground(View3DProperties.getDefault().getColor2());
    }

    void store() {
        double quality = (maxQuality - minQuality) / 100.0 * qualitySlider.getValue() + minQuality;
        View3DProperties.getDefault().setNetQuality(quality);
        View3DProperties.getDefault().setColor1(color1Label.getBackground());
        View3DProperties.getDefault().setColor2(color2Label.getBackground());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel color1Label;
    private javax.swing.JLabel color2Label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSlider qualitySlider;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton select1Button;
    private javax.swing.JButton select2Button;
    // End of variables declaration//GEN-END:variables

    @Override
    public void stateChanged(ChangeEvent e) {
        controller.changed();
    }
}
